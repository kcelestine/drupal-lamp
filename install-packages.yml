---
- name: Provision Apache, PHP, and MySQL
  hosts: all
  gather_facts: no
  become: true
  vars:
    apache_port: 80
    mysql_root_password: "password"  # Update as necessary
    php_version: "8.3"

  tasks:
    - name: Install Apache 2.4
      apt:
        name: apache2
        state: present
        update_cache: yes
    - name: Ensure Python 3 is installed
      apt:
        name: python3
        state: present

    - name: Ensure pip for Python 3 is installed
      apt:
        name: python3-pip
        state: present

    - name: Install PyMySQL using pip3
      command: python3 -m pip install PyMySQL --break-system-packages

    - name: Verify PyMySQL installation
      command: python3 -c "import pymysql; print(pymysql.__version__)"
      register: pymysql_version
      changed_when: false

    - name: Output PyMySQL version
      debug:
        msg: "Installed PyMySQL version: {{ pymysql_version.stdout }}"

    - name: Install PHP 8.3.9
      apt:
        name:
          - php{{ php_version }}
          - php{{ php_version }}-mysql
        state: present

    - name: Install MySQL 9.1.0
      apt:
        name: mysql-server
        state: present

    - name: Start Apache service
      service:
        name: apache2
        state: started
        enabled: yes

    - name: Start MySQL service
      service:
        name: mysql
        state: started
        enabled: yes


    # - name: Stop MySQL
    #   service: name=mysql state=stopped
    # - name: set environment variables
    #   shell: systemctl set-environment MYSQLD_OPTS="--skip-grant-tables"
    # - name: Start MySQL
    #   service: name=mysql state=started
    # - name: sql query
    #   command:  mysql -u root --execute="UPDATE mysql.user SET authentication_string = PASSWORD('toto') WHERE User = 'root' AND Host = 'localhost';"
    # - name: sql query flush
    #   command:  mysql -u root --execute="FLUSH PRIVILEGES"
    # - name: Stop MySQL
    #   service: name=mysql state=stopped
    # - name: unset environment variables
    #   shell: systemctl unset-environment MYSQLD_OPTS
    # - name: Start MySQL
    #   service: name=mysql state=started

    - name: Set MySQL root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        host: localhost
        login_user: root
        login_password: "password"
        state: present

    # run in mysql
    # SHOW VARIABLES LIKE "%version%"; 

#https://serverfault.com/questions/1130682/setting-mysql-using-ansible-in-ubuntu-remote-machine
    # - name: user setup in mysql
    #   mysql_user:
    #    user: root
    #    password: password
    #    host: web
    #    priv: '*.*:ALL,GRANT'
    #    login_unix_socket: /var/run/mysqld/mysqld.sock

    # - name: Set the MySQL root password
    #   mysql_user:
    #     name: root
    #     password: "password"  # Set the password of your choice
    #     host: localhost
    #     state: present


    # - name: Ensure MySQL root password is set and MySQL service is restarted
    #   service:
    #     name: mysql
    #     state: restarted